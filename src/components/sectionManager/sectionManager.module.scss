@import '../../css/utils/utils';

$angleHeight: 18vw;
$sectionPadding: 15vw;

$transform: 21.80140948635181deg;

@mixin allSections() {
	&[data-even='true'],
	&[data-odd='true'] {
		@content;
	}
}

@mixin evenSections() {
	[data-section]:nth-child(even) {
		@content;
	}
}

@mixin oddSections() {
	[data-section]:nth-child(odd) {
		@content;
	}
}

@mixin targetChild($index) {
	[data-section]:nth-child(#{$index}) {
		@content;
	}
}

@mixin firstChild() {
	[data-section]:first-child {
		@content;
	}
}

@mixin lastChild() {
	[data-section]:last-child {
		@content;
	}
}

@mixin hassOddLength() {
	&[data-odd='true'] {
		@content;
	}
}

@mixin hasEvenLength() {
	&[data-even='true'] {
		@content;
	}
}

@mixin defaultStyles() {
	[data-section]:not(:last-child) {
		padding-bottom: $sectionPadding;
	}

	[data-section]:not(:first-child) {
		margin-top: $angleHeight * -1;
		padding-top: $sectionPadding;
	}

	[data-section]:first-child {
		clip-path: none;
	}
}

.sectionManager {
	&[data-template='chevron'] {
		@include hassOddLength() {
			@include evenSections() {
				clip-path: polygon(0 #{$angleHeight}, 100% 0, 100% 100%, 0 100%);
			}

			@include oddSections() {
				clip-path: polygon(0 0, 100% #{$angleHeight}, 100% 100%, 0 100%);
			}
		}

		@include hasEvenLength() {
			@include evenSections() {
				clip-path: polygon(0 0, 100% #{$angleHeight}, 100% 100%, 0 100%);
			}

			@include oddSections() {
				clip-path: polygon(0 #{$angleHeight}, 100% 0, 100% 100%, 0 100%);
			}
		}

		@include allSections() {
			@include defaultStyles();

			@include targetChild(2) {
				clip-path: polygon(0 0, 50% #{$angleHeight}, 100% 0, 100% 100%, 0 100%);
				position: relative;
			}
		}
	}

	&[data-template='angle'] {
		@include allSections() {
			@include evenSections() {
				clip-path: polygon(0 0, 100% #{$angleHeight}, 100% 100%, 0 100%);
			}

			@include oddSections() {
				clip-path: polygon(0 #{$angleHeight}, 100% 0, 100% 100%, 0 100%);
			}

			@include lastChild() {
				clip-path: polygon(0 #{$angleHeight}, 100% 0, 100% 100%, 0 100%);
			}
		}
	}

	&[data-template='project'] {
		$projectAngle: 50 - $angleHeight;
		@include hassOddLength() {
			@include evenSections() {
				clip-path: polygon(0 #{$projectAngle}, 100% 0, 100% 100%, 0 100%);
			}

			@include oddSections() {
				clip-path: polygon(0 0, 100% #{$projectAngle}, 100% 100%, 0 100%);
			}
		}

		@include hasEvenLength() {
			@include evenSections() {
				clip-path: polygon(0 0, 100% #{$projectAngle}, 100% 100%, 0 100%);
			}

			@include oddSections() {
				clip-path: polygon(0 #{$projectAngle}, 100% 0, 100% 100%, 0 100%);
			}
		}

		@include allSections() {
			@include defaultStyles();

			@include firstChild() {
				[data-clip] {
					clip-path: polygon(0 0, 50% #{$angleHeight}, 100% 0, 100% 100%, 0 100%);
					height: $angleHeight;
					margin-top: $angleHeight * -1;
				}
			}

			@include targetChild(2) {
				clip-path: none;
				margin-top: 0;
				padding-top: 0;
			}
		}
	}
}

.lineWrap {
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	@include zIndex(sectionLines);
}

.lines {
	@include zIndex(sectionLines);
}

.line {
	background-color: $grey;
	height: 2px;
	position: absolute;
	width: 200vw;
	transform-origin: 0;
	@include zIndex(sectionLines);
}

*[data-line='true'] {
	background-color: $grey;
	height: 1px;
	position: absolute;
	width: 0;
	transform-origin: 0;
	@include zIndex(sectionLines);
}

.lineWrap[data-layout='chevron'] {
	.lines:nth-child(2) {
		.line {
			transform-origin: 100%;
		}
	}
}
